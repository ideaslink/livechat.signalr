// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using livechat.signalr.Data;

#nullable disable

namespace livechat.signalr.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240116092449_updategroupuser")]
    partial class updategroupuser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("livechat.signalr.models.Group", b =>
                {
                    b.Property<string>("GroupName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupAlias")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("GroupName");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("livechat.signalr.models.Group_User", b =>
                {
                    b.Property<string>("GroupName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("GroupName", "UserName");

                    b.HasIndex("UserName");

                    b.ToTable("Group_Users");
                });

            modelBuilder.Entity("livechat.signalr.models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("livechat.signalr.models.Group_User", b =>
                {
                    b.HasOne("livechat.signalr.models.Group", "Group")
                        .WithMany("Group_Users")
                        .HasForeignKey("GroupName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("livechat.signalr.models.User", "User")
                        .WithMany("Group_Users")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("livechat.signalr.models.Group", b =>
                {
                    b.Navigation("Group_Users");
                });

            modelBuilder.Entity("livechat.signalr.models.User", b =>
                {
                    b.Navigation("Group_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
